# -*- coding: utf-8 -*-
"""Практ.№1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gq6FJe0t932pNydRq9AzMcC1f2-ncY_t

АДЭУ-201
Соколова Марина Сергеевна 

SokolovaMS624@mgpu.ru

marinasokolova48232@gmail.com

# Дополнительное задание
"""

class SpaceShip:
  def __init__(self):
    self.hp = 100
    self.speed = 1300
    self.crew = 64
    self.power_reserve = 56000

  def __str__(self):
    return "SpeceShip: {}; {}; {}; {}" .format(self.hp, self.speed, self.crew, self.power_reserve)

  def draw(self):
    print('+-|--------|-+')
    print('+     ПП     +')
    print('+     ПП     +')
    print('=--П------П--+')
class StarDestroyer(SpaceShip):
  def __init__(self):
    super().__init__()
    self.shields = 100
    self.shields_enabled = False
    self.weapons = [100]*15

  def __str__(self):
    return "StarDestroyer: {}; {}" .format(self.shields, self.weapons)
    
  def shelds_on(self):
     self.shields_enabled = True
  
  def shields_off(self):
    self.shields_enabled = False
  
  def hit(self):
    if self/shields_enabled:
      self.shields -= 10
    else: 
        self.hp -=10
  
  def draw (self):
    print("        /\        ")
    print("       /  \       ")
    print("      /    \      ") 
    print("     / |  | \     ") 
    print("    /        \    ") 
    print("   /   /..\   \   ")
    print("  /   +----+   \  ") 
    print(" +---+-+--+-+---+ ") 
    print("     |_|  |_|") 

SpaceShip1 = SpaceShip()
StarDestroyer1 = StarDestroyer()
print(StarDestroyer1.draw())
print(SpaceShip1.draw())

"""# Задание №1"""

class First:
  color = "red"
  def out(self):
    print(self.color + "!") 
obj1 = First()
obj2 = First()
print(obj1.color)
print(obj2.color)
obj1.out()
obj2.out()

"""# Задание №2.1"""

class Second:
    color = "red"
    form = "circle"
    size = "middle"
    def changecolor (self,newcolor):
      self.color = newcolor
    def changeform (self, newform):
      self.form = newform
    def changesize (self,newsize):
      self.size = newsize
obj1 = Second ()
obj2 = Second ()
obj3 = Second ()

print(obj1.color, obj1.form, obj1.size)
print(obj2.color, obj2.form, obj2.size)

obj1.changecolor("green")
obj2.changecolor("blue")
obj2.changeform("oval")
obj1.changesize("small")

print(obj1.color, obj1.form, obj1.size)
print(obj2.color, obj2.form, obj2.size)

"""# Задание №2.2"""

class Dog():
  #"Простая модель собаки"
  def __init__(self, name, age):
  #Имя и возраст
    self.name = name
    self.age = age 

  def sit(self):
  #Собака будет садиться по команде
    print(self.name.title()+ "сел")
  def jump(self):
  #Собака будет прыгать по команде
    print(self.name.title()+ "сделал прыжок")

my_dog = Dog ('Tim ', 4)
print (my_dog.age)
print (my_dog.name)
my_dog.jump()


my_dog_2 = Dog('Nick ', 7) 
print (my_dog_2.age)
print (my_dog_2.name)
my_dog_2.sit()

"""# Задание №3"""

class YesInit:
  def __init__(self,one,two):
    self.fname = one
    self.sname = two

obj1 = YesInit("Peter","Ok")


print (obj1.fname, obj1.sname)

class NoInit:
  def names(self,one,two):
    self.fname = one
    self.sname = two
    
obj1 = NoInit()
obj1.names("Peter","Ok")

print (obj1.fname, obj1.sname)

"""# Задание №4"""

class YesInit:
  def __init__(self,one="noname",two="nonametoo"):
    self.fname = one
    self.sname = two

obj1 = YesInit("Sasha","Tu")
obj2 = YesInit()
obj3 = YesInit("Spartak")
obj4 = YesInit(two="Harry")

print (obj1.fname, obj1.sname)
print (obj2.fname, obj2.sname)
print (obj3.fname, obj3.sname)
print (obj4.fname, obj4.sname)

"""# **Задание** №5"""

class fruits:
  def __init__(self,w,n=0):
    self.what = w
    self.numbers = n

f1 = fruits("apple",150)
f2 = fruits("pineapple")

print(f1.what,f1.numbers)
print(f2.what,f2.numbers)

class fruits:
  def __init__(self,w,n=0):
    self.what = w
    self.numbers = n

f1 = fruits(150,"apple")
f2 = fruits("pineapple")

print(f1.what,f1.numbers)
print(f2.what,f2.numbers)

"""# Задание №6"""

class Building:
  def __init__(self,w,c,n=0):
    self.what = w
    self.color = c
    self.numbers = n
    self.mwhere(n)

  def mwhere(self,n):
    if n <= 0:
      self.where = "отсутствуют"
    elif 0 < n < 100:
      self.where = "малый склад"
    else:
      self.where = "основной склад"

  def plus(self,p):
    self.numbers = self.numbers + p
    self.mwhere(self.numbers)

  def minus(self,m):
    self.numbers = self.numbers - m
    self.mwhere(self.numbers)

m1 = Building("доски", "белые",50)
m2 = Building("доски", "коричневые", 300)
m3 = Building("кирпичи","белые")

print (m1.what,m1.color,m1.where)
print (m2.what,m2.color,m2.where)
print (m3.what,m3.color,m3.where)

m1.plus(500)
print (m1.numbers, m1.where)


class Park:
  def __init__(self,l,b,s):
    self.plant = l
    self.benches = b 
    self.size = s 
    self.mwhere(b)

  def mwhere(self,b):
    if b <= 20:
      self.where = "маленький сад"
    elif 20 < b < 50:
      self.where = "средний сад"
    else:
      self.where = "большой сад"

  def plus(self,p):
    self.benches = self.benches + p
    self.mwhere(self.benches)

  def minus(self,m):
    self.benches = self.benches - m
    self.mwhere(self.benches)

m1 = Park ("дуб", 30, 5)
m2 = Park ("береза",10, 1)
m3 = Park ("ель",55, 15 )

print(m1.plant, m1.where, m1.size)
print(m2.plant, m2.where, m2.size)
print(m3.plant, m3.where, m3.size)

"""# Задание №7"""

class Things:
  def __init__(self,n,t):
    self.namething = n
    self.total = t

th1=Things("table", 5)
th2=Things("computer", 7)

print(th1.namething, th1.total) 
print(th2.namething, th2.total) 

th1.color = "green" 
th2.color = ""

print(th1.color) 
print(th2.color)

"""# Задание №8"""

class Table:
  def __init__(self,l,w,h):
    self.long = l
    self.width = w
    self.height = h

  def outing(self):
    print (self.long,self.width,self.height)



class Worker(Table):
  def area(self, a):
    if a<3:
      print ("It is not Worker table")
    else:
      self.places=a

  def outplases(self):
    print(self.places)



class Kitchen(Table):
  def howplaces(self,n):
    if n<2:
      print ("It is not kitchen table")
    else:
      self.places = n

  def outplases(self):
    print(self.places)


t_room1 = Kitchen(2,1,0.5)
t_room1.outing()
t_room1.howplaces(5)
t_room1.outplases()

t_room2 = Worker(1,3,0.7)
t_room2.outing()
t_room2.area(15)
t_room2.outplases()

"""# №8 Практическая работа"""

class Figure:
  color = 'white'
  def changecolor (self,newcolor):
      self.color = newcolor
obj1 = Figure ()
print(obj1.color)
obj1.changecolor("green")
print(obj1.color)

class Oval(Figure):
  def __init__(self,s,r):
    self.size = s
    self.rudius = r
obj2 = Oval(44, 5)

print(obj2.size,obj2.rudius)

class Square(Figure):
  def __init__(self,s,a):
    self.size = s
    self.area = a
obj3 = Square(5, 25)

print(obj3.size,obj3.area)